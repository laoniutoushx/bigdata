/*
 * This file is generated by jOOQ.
 */
package sos.haruhi.dbframe.jooq.tables.pojos;


import sos.haruhi.dbframe.jooq.tables.interfaces.IDefineEquipType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefineEquipType implements IDefineEquipType {

    private static final long serialVersionUID = 1L;

    private String typeId;
    private String cateCode;
    private String cateName;
    private String typeCode;
    private String typeDesc;
    private String typeGroup;
    private String typeIcon;
    private String typeMajor;
    private String typeName;
    private String versionCode;

    public DefineEquipType() {}

    public DefineEquipType(IDefineEquipType value) {
        this.typeId = value.getTypeId();
        this.cateCode = value.getCateCode();
        this.cateName = value.getCateName();
        this.typeCode = value.getTypeCode();
        this.typeDesc = value.getTypeDesc();
        this.typeGroup = value.getTypeGroup();
        this.typeIcon = value.getTypeIcon();
        this.typeMajor = value.getTypeMajor();
        this.typeName = value.getTypeName();
        this.versionCode = value.getVersionCode();
    }

    public DefineEquipType(
        String typeId,
        String cateCode,
        String cateName,
        String typeCode,
        String typeDesc,
        String typeGroup,
        String typeIcon,
        String typeMajor,
        String typeName,
        String versionCode
    ) {
        this.typeId = typeId;
        this.cateCode = cateCode;
        this.cateName = cateName;
        this.typeCode = typeCode;
        this.typeDesc = typeDesc;
        this.typeGroup = typeGroup;
        this.typeIcon = typeIcon;
        this.typeMajor = typeMajor;
        this.typeName = typeName;
        this.versionCode = versionCode;
    }

    /**
     * Getter for <code>public.define_equip_type.type_id</code>.
     */
    @Override
    public String getTypeId() {
        return this.typeId;
    }

    /**
     * Setter for <code>public.define_equip_type.type_id</code>.
     */
    @Override
    public void setTypeId(String typeId) {
        this.typeId = typeId;
    }

    /**
     * Getter for <code>public.define_equip_type.cate_code</code>.
     */
    @Override
    public String getCateCode() {
        return this.cateCode;
    }

    /**
     * Setter for <code>public.define_equip_type.cate_code</code>.
     */
    @Override
    public void setCateCode(String cateCode) {
        this.cateCode = cateCode;
    }

    /**
     * Getter for <code>public.define_equip_type.cate_name</code>.
     */
    @Override
    public String getCateName() {
        return this.cateName;
    }

    /**
     * Setter for <code>public.define_equip_type.cate_name</code>.
     */
    @Override
    public void setCateName(String cateName) {
        this.cateName = cateName;
    }

    /**
     * Getter for <code>public.define_equip_type.type_code</code>.
     */
    @Override
    public String getTypeCode() {
        return this.typeCode;
    }

    /**
     * Setter for <code>public.define_equip_type.type_code</code>.
     */
    @Override
    public void setTypeCode(String typeCode) {
        this.typeCode = typeCode;
    }

    /**
     * Getter for <code>public.define_equip_type.type_desc</code>.
     */
    @Override
    public String getTypeDesc() {
        return this.typeDesc;
    }

    /**
     * Setter for <code>public.define_equip_type.type_desc</code>.
     */
    @Override
    public void setTypeDesc(String typeDesc) {
        this.typeDesc = typeDesc;
    }

    /**
     * Getter for <code>public.define_equip_type.type_group</code>.
     */
    @Override
    public String getTypeGroup() {
        return this.typeGroup;
    }

    /**
     * Setter for <code>public.define_equip_type.type_group</code>.
     */
    @Override
    public void setTypeGroup(String typeGroup) {
        this.typeGroup = typeGroup;
    }

    /**
     * Getter for <code>public.define_equip_type.type_icon</code>.
     */
    @Override
    public String getTypeIcon() {
        return this.typeIcon;
    }

    /**
     * Setter for <code>public.define_equip_type.type_icon</code>.
     */
    @Override
    public void setTypeIcon(String typeIcon) {
        this.typeIcon = typeIcon;
    }

    /**
     * Getter for <code>public.define_equip_type.type_major</code>.
     */
    @Override
    public String getTypeMajor() {
        return this.typeMajor;
    }

    /**
     * Setter for <code>public.define_equip_type.type_major</code>.
     */
    @Override
    public void setTypeMajor(String typeMajor) {
        this.typeMajor = typeMajor;
    }

    /**
     * Getter for <code>public.define_equip_type.type_name</code>.
     */
    @Override
    public String getTypeName() {
        return this.typeName;
    }

    /**
     * Setter for <code>public.define_equip_type.type_name</code>.
     */
    @Override
    public void setTypeName(String typeName) {
        this.typeName = typeName;
    }

    /**
     * Getter for <code>public.define_equip_type.version_code</code>.
     */
    @Override
    public String getVersionCode() {
        return this.versionCode;
    }

    /**
     * Setter for <code>public.define_equip_type.version_code</code>.
     */
    @Override
    public void setVersionCode(String versionCode) {
        this.versionCode = versionCode;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DefineEquipType (");

        sb.append(typeId);
        sb.append(", ").append(cateCode);
        sb.append(", ").append(cateName);
        sb.append(", ").append(typeCode);
        sb.append(", ").append(typeDesc);
        sb.append(", ").append(typeGroup);
        sb.append(", ").append(typeIcon);
        sb.append(", ").append(typeMajor);
        sb.append(", ").append(typeName);
        sb.append(", ").append(versionCode);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDefineEquipType from) {
        setTypeId(from.getTypeId());
        setCateCode(from.getCateCode());
        setCateName(from.getCateName());
        setTypeCode(from.getTypeCode());
        setTypeDesc(from.getTypeDesc());
        setTypeGroup(from.getTypeGroup());
        setTypeIcon(from.getTypeIcon());
        setTypeMajor(from.getTypeMajor());
        setTypeName(from.getTypeName());
        setVersionCode(from.getVersionCode());
    }

    @Override
    public <E extends IDefineEquipType> E into(E into) {
        into.from(this);
        return into;
    }
}
