/*
 * This file is generated by jOOQ.
 */
package sos.haruhi.dbframe.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import sos.haruhi.dbframe.jooq.tables.ImpDataDetail;
import sos.haruhi.dbframe.jooq.tables.interfaces.IImpDataDetail;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImpDataDetailRecord extends UpdatableRecordImpl<ImpDataDetailRecord> implements Record8<String, String, String, String, String, Integer, Short, String>, IImpDataDetail {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.imp_data_detail.data_id</code>.
     */
    @Override
    public void setDataId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.imp_data_detail.data_id</code>.
     */
    @Override
    public String getDataId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.imp_data_detail.imp_name</code>.
     */
    @Override
    public void setImpName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.imp_data_detail.imp_name</code>.
     */
    @Override
    public String getImpName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.imp_data_detail.imp_value</code>.
     */
    @Override
    public void setImpValue(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.imp_data_detail.imp_value</code>.
     */
    @Override
    public String getImpValue() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.imp_data_detail.logs_id</code>.
     */
    @Override
    public void setLogsId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.imp_data_detail.logs_id</code>.
     */
    @Override
    public String getLogsId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.imp_data_detail.prop_id</code>.
     */
    @Override
    public void setPropId(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.imp_data_detail.prop_id</code>.
     */
    @Override
    public String getPropId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.imp_data_detail.row_index</code>.
     */
    @Override
    public void setRowIndex(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.imp_data_detail.row_index</code>.
     */
    @Override
    public Integer getRowIndex() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.imp_data_detail.valid_state</code>.
     */
    @Override
    public void setValidState(Short value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.imp_data_detail.valid_state</code>.
     */
    @Override
    public Short getValidState() {
        return (Short) get(6);
    }

    /**
     * Setter for <code>public.imp_data_detail.value_unit</code>.
     */
    @Override
    public void setValueUnit(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.imp_data_detail.value_unit</code>.
     */
    @Override
    public String getValueUnit() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, String, String, String, Integer, Short, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, String, String, String, String, Integer, Short, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ImpDataDetail.IMP_DATA_DETAIL.DATA_ID;
    }

    @Override
    public Field<String> field2() {
        return ImpDataDetail.IMP_DATA_DETAIL.IMP_NAME;
    }

    @Override
    public Field<String> field3() {
        return ImpDataDetail.IMP_DATA_DETAIL.IMP_VALUE;
    }

    @Override
    public Field<String> field4() {
        return ImpDataDetail.IMP_DATA_DETAIL.LOGS_ID;
    }

    @Override
    public Field<String> field5() {
        return ImpDataDetail.IMP_DATA_DETAIL.PROP_ID;
    }

    @Override
    public Field<Integer> field6() {
        return ImpDataDetail.IMP_DATA_DETAIL.ROW_INDEX;
    }

    @Override
    public Field<Short> field7() {
        return ImpDataDetail.IMP_DATA_DETAIL.VALID_STATE;
    }

    @Override
    public Field<String> field8() {
        return ImpDataDetail.IMP_DATA_DETAIL.VALUE_UNIT;
    }

    @Override
    public String component1() {
        return getDataId();
    }

    @Override
    public String component2() {
        return getImpName();
    }

    @Override
    public String component3() {
        return getImpValue();
    }

    @Override
    public String component4() {
        return getLogsId();
    }

    @Override
    public String component5() {
        return getPropId();
    }

    @Override
    public Integer component6() {
        return getRowIndex();
    }

    @Override
    public Short component7() {
        return getValidState();
    }

    @Override
    public String component8() {
        return getValueUnit();
    }

    @Override
    public String value1() {
        return getDataId();
    }

    @Override
    public String value2() {
        return getImpName();
    }

    @Override
    public String value3() {
        return getImpValue();
    }

    @Override
    public String value4() {
        return getLogsId();
    }

    @Override
    public String value5() {
        return getPropId();
    }

    @Override
    public Integer value6() {
        return getRowIndex();
    }

    @Override
    public Short value7() {
        return getValidState();
    }

    @Override
    public String value8() {
        return getValueUnit();
    }

    @Override
    public ImpDataDetailRecord value1(String value) {
        setDataId(value);
        return this;
    }

    @Override
    public ImpDataDetailRecord value2(String value) {
        setImpName(value);
        return this;
    }

    @Override
    public ImpDataDetailRecord value3(String value) {
        setImpValue(value);
        return this;
    }

    @Override
    public ImpDataDetailRecord value4(String value) {
        setLogsId(value);
        return this;
    }

    @Override
    public ImpDataDetailRecord value5(String value) {
        setPropId(value);
        return this;
    }

    @Override
    public ImpDataDetailRecord value6(Integer value) {
        setRowIndex(value);
        return this;
    }

    @Override
    public ImpDataDetailRecord value7(Short value) {
        setValidState(value);
        return this;
    }

    @Override
    public ImpDataDetailRecord value8(String value) {
        setValueUnit(value);
        return this;
    }

    @Override
    public ImpDataDetailRecord values(String value1, String value2, String value3, String value4, String value5, Integer value6, Short value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IImpDataDetail from) {
        setDataId(from.getDataId());
        setImpName(from.getImpName());
        setImpValue(from.getImpValue());
        setLogsId(from.getLogsId());
        setPropId(from.getPropId());
        setRowIndex(from.getRowIndex());
        setValidState(from.getValidState());
        setValueUnit(from.getValueUnit());
    }

    @Override
    public <E extends IImpDataDetail> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImpDataDetailRecord
     */
    public ImpDataDetailRecord() {
        super(ImpDataDetail.IMP_DATA_DETAIL);
    }

    /**
     * Create a detached, initialised ImpDataDetailRecord
     */
    public ImpDataDetailRecord(String dataId, String impName, String impValue, String logsId, String propId, Integer rowIndex, Short validState, String valueUnit) {
        super(ImpDataDetail.IMP_DATA_DETAIL);

        setDataId(dataId);
        setImpName(impName);
        setImpValue(impValue);
        setLogsId(logsId);
        setPropId(propId);
        setRowIndex(rowIndex);
        setValidState(validState);
        setValueUnit(valueUnit);
    }
}
