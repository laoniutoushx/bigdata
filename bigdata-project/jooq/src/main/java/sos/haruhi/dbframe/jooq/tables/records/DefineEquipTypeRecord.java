/*
 * This file is generated by jOOQ.
 */
package sos.haruhi.dbframe.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import sos.haruhi.dbframe.jooq.tables.DefineEquipType;
import sos.haruhi.dbframe.jooq.tables.interfaces.IDefineEquipType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefineEquipTypeRecord extends UpdatableRecordImpl<DefineEquipTypeRecord> implements Record10<String, String, String, String, String, String, String, String, String, String>, IDefineEquipType {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.define_equip_type.type_id</code>.
     */
    @Override
    public void setTypeId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.define_equip_type.type_id</code>.
     */
    @Override
    public String getTypeId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.define_equip_type.cate_code</code>.
     */
    @Override
    public void setCateCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.define_equip_type.cate_code</code>.
     */
    @Override
    public String getCateCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.define_equip_type.cate_name</code>.
     */
    @Override
    public void setCateName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.define_equip_type.cate_name</code>.
     */
    @Override
    public String getCateName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.define_equip_type.type_code</code>.
     */
    @Override
    public void setTypeCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.define_equip_type.type_code</code>.
     */
    @Override
    public String getTypeCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.define_equip_type.type_desc</code>.
     */
    @Override
    public void setTypeDesc(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.define_equip_type.type_desc</code>.
     */
    @Override
    public String getTypeDesc() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.define_equip_type.type_group</code>.
     */
    @Override
    public void setTypeGroup(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.define_equip_type.type_group</code>.
     */
    @Override
    public String getTypeGroup() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.define_equip_type.type_icon</code>.
     */
    @Override
    public void setTypeIcon(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.define_equip_type.type_icon</code>.
     */
    @Override
    public String getTypeIcon() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.define_equip_type.type_major</code>.
     */
    @Override
    public void setTypeMajor(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.define_equip_type.type_major</code>.
     */
    @Override
    public String getTypeMajor() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.define_equip_type.type_name</code>.
     */
    @Override
    public void setTypeName(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.define_equip_type.type_name</code>.
     */
    @Override
    public String getTypeName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.define_equip_type.version_code</code>.
     */
    @Override
    public void setVersionCode(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.define_equip_type.version_code</code>.
     */
    @Override
    public String getVersionCode() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<String, String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<String, String, String, String, String, String, String, String, String, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return DefineEquipType.DEFINE_EQUIP_TYPE.TYPE_ID;
    }

    @Override
    public Field<String> field2() {
        return DefineEquipType.DEFINE_EQUIP_TYPE.CATE_CODE;
    }

    @Override
    public Field<String> field3() {
        return DefineEquipType.DEFINE_EQUIP_TYPE.CATE_NAME;
    }

    @Override
    public Field<String> field4() {
        return DefineEquipType.DEFINE_EQUIP_TYPE.TYPE_CODE;
    }

    @Override
    public Field<String> field5() {
        return DefineEquipType.DEFINE_EQUIP_TYPE.TYPE_DESC;
    }

    @Override
    public Field<String> field6() {
        return DefineEquipType.DEFINE_EQUIP_TYPE.TYPE_GROUP;
    }

    @Override
    public Field<String> field7() {
        return DefineEquipType.DEFINE_EQUIP_TYPE.TYPE_ICON;
    }

    @Override
    public Field<String> field8() {
        return DefineEquipType.DEFINE_EQUIP_TYPE.TYPE_MAJOR;
    }

    @Override
    public Field<String> field9() {
        return DefineEquipType.DEFINE_EQUIP_TYPE.TYPE_NAME;
    }

    @Override
    public Field<String> field10() {
        return DefineEquipType.DEFINE_EQUIP_TYPE.VERSION_CODE;
    }

    @Override
    public String component1() {
        return getTypeId();
    }

    @Override
    public String component2() {
        return getCateCode();
    }

    @Override
    public String component3() {
        return getCateName();
    }

    @Override
    public String component4() {
        return getTypeCode();
    }

    @Override
    public String component5() {
        return getTypeDesc();
    }

    @Override
    public String component6() {
        return getTypeGroup();
    }

    @Override
    public String component7() {
        return getTypeIcon();
    }

    @Override
    public String component8() {
        return getTypeMajor();
    }

    @Override
    public String component9() {
        return getTypeName();
    }

    @Override
    public String component10() {
        return getVersionCode();
    }

    @Override
    public String value1() {
        return getTypeId();
    }

    @Override
    public String value2() {
        return getCateCode();
    }

    @Override
    public String value3() {
        return getCateName();
    }

    @Override
    public String value4() {
        return getTypeCode();
    }

    @Override
    public String value5() {
        return getTypeDesc();
    }

    @Override
    public String value6() {
        return getTypeGroup();
    }

    @Override
    public String value7() {
        return getTypeIcon();
    }

    @Override
    public String value8() {
        return getTypeMajor();
    }

    @Override
    public String value9() {
        return getTypeName();
    }

    @Override
    public String value10() {
        return getVersionCode();
    }

    @Override
    public DefineEquipTypeRecord value1(String value) {
        setTypeId(value);
        return this;
    }

    @Override
    public DefineEquipTypeRecord value2(String value) {
        setCateCode(value);
        return this;
    }

    @Override
    public DefineEquipTypeRecord value3(String value) {
        setCateName(value);
        return this;
    }

    @Override
    public DefineEquipTypeRecord value4(String value) {
        setTypeCode(value);
        return this;
    }

    @Override
    public DefineEquipTypeRecord value5(String value) {
        setTypeDesc(value);
        return this;
    }

    @Override
    public DefineEquipTypeRecord value6(String value) {
        setTypeGroup(value);
        return this;
    }

    @Override
    public DefineEquipTypeRecord value7(String value) {
        setTypeIcon(value);
        return this;
    }

    @Override
    public DefineEquipTypeRecord value8(String value) {
        setTypeMajor(value);
        return this;
    }

    @Override
    public DefineEquipTypeRecord value9(String value) {
        setTypeName(value);
        return this;
    }

    @Override
    public DefineEquipTypeRecord value10(String value) {
        setVersionCode(value);
        return this;
    }

    @Override
    public DefineEquipTypeRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDefineEquipType from) {
        setTypeId(from.getTypeId());
        setCateCode(from.getCateCode());
        setCateName(from.getCateName());
        setTypeCode(from.getTypeCode());
        setTypeDesc(from.getTypeDesc());
        setTypeGroup(from.getTypeGroup());
        setTypeIcon(from.getTypeIcon());
        setTypeMajor(from.getTypeMajor());
        setTypeName(from.getTypeName());
        setVersionCode(from.getVersionCode());
    }

    @Override
    public <E extends IDefineEquipType> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DefineEquipTypeRecord
     */
    public DefineEquipTypeRecord() {
        super(DefineEquipType.DEFINE_EQUIP_TYPE);
    }

    /**
     * Create a detached, initialised DefineEquipTypeRecord
     */
    public DefineEquipTypeRecord(String typeId, String cateCode, String cateName, String typeCode, String typeDesc, String typeGroup, String typeIcon, String typeMajor, String typeName, String versionCode) {
        super(DefineEquipType.DEFINE_EQUIP_TYPE);

        setTypeId(typeId);
        setCateCode(cateCode);
        setCateName(cateName);
        setTypeCode(typeCode);
        setTypeDesc(typeDesc);
        setTypeGroup(typeGroup);
        setTypeIcon(typeIcon);
        setTypeMajor(typeMajor);
        setTypeName(typeName);
        setVersionCode(versionCode);
    }
}
